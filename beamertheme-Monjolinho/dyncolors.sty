%! Package = dyncolors
%! Author = Jander Moreira
%! Date = 07/10/2022

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{dyncolors}[2022/10/07 Dynamic colors for beamer]

\@ifclassloaded{beamer}{}{
    \PackageError{dyncolors}{'dyncolors' is a package for Beamer}{The package 'dyncolors' can only be loaded from class beamer}
}

% Options

\RequirePackage{tikz}
% \RequirePackage{xcolor}

% Color theme
\definecolor{dDarkBlue}{HTML}{14163B}
\definecolor{dBrown}{HTML}{804722}
\definecolor{dBlue}{HTML}{0264C7}
\definecolor{dLightYellow}{HTML}{F5EDD0}
\definecolor{dGreen}{HTML}{065C61}

% Darker colors
\definecolor{dDarkJungleGreen}{HTML}{051D1A}
\definecolor{dHunterGreen}{HTML}{345B3F}
\definecolor{dCaputMortuum}{HTML}{5E2325}
\definecolor{dGamboge}{HTML}{D89818}
\definecolor{dRussianViolet}{HTML}{470E4A}

\newcounter{ordem}

% List environment
\ExplSyntaxOn

\cs_generate_variant:Nn \int_set:Nn { cn }
\cs_generate_variant:Nn \seq_set_split:Nnn { cnn }

\tl_new:N \g_current_color_tl
\tl_set:Nn \g_current_color_tl { normal~text.fg }

\cs_new:Npn \reset_color:n #1 {
    \int_set:cn { g_#1_current_int } { 0 }
    \tl_gset:Nn \g_current_color_tl {
        \seq_item:cn { g_#1_colors_seq  }{ 1 }
    }

}
\cs_new:Npn \new_color_list:n #1 {
    \seq_new:c { g_#1_colors_seq }
    \int_new:c { g_#1_current_int }
    \reset_color:n { #1 }
}
\cs_new:Npn \set_color_list:nn #1#2 {
    \seq_set_split:cnn { g_#1_colors_seq } { , } { #2 }
}
\cs_new:Npn \step_color:n #1 {
    \int_if_exist:NTF \l_index_int {} { \int_new:N \l_index_int }
    \int_set:Nn \l_index_int { \int_use:c { g_#1_current_int } }
    \tl_gset:Nn \g_current_color_tl {
        \seq_item:cn { g_#1_colors_seq  }{ \int_eval:n {\int_use:N  \l_index_int + 1} }
    }
    \int_gset:cn { g_#1_current_int } {
        \int_mod:nn { \l_index_int + 1 } { \seq_count:c { g_#1_colors_seq } }
    }
}

% document commands
\NewDocumentCommand{\SetColorList}{mm}{
    \set_color_list:nn { #1 } { #2 }
}
\NewDocumentCommand{\NewColorList}{m}{
    \new_color_list:n { #1 }
}
\NewExpandableDocumentCommand{\CurrentColor}{}{\tl_use:N \g_current_color_tl}
\NewDocumentCommand{\StepColor}{m}{
    \step_color:n { #1 }
}
\NewDocumentCommand{\ResetColors}{m}{
    \reset_color:n { #1 }
}

\ExplSyntaxOff

\NewColorList{main}
% \SetColorList{main}{dGamboge, dDarkJungleGreen, dHunterGreen, dRussianViolet, dCaputMortuum}
\SetColorList{main}{red, green, blue, orange}
% \SetColorList{main}{itemize/enumerate body.fg}

\NewColorList{second level}
% \SetColorList{second level}{dHunterGreen, dGamboge}
\SetColorList{second level}{brown, black, yellow}
% \SetColorList{second level}{itemize/enumerate subbody.fg}

%! formatter = off
\newcommand{\NextColor}{%
    \pgfmathparse{int(mod(\@itemdepth + 1, 2))}%
    \ifnum\pgfmathresult=0%
        \StepColor{main}%
    \else
        \StepColor{second level}%
    \fi%
    \color{\CurrentColor}%
}
%! formatter = on

\NewCommandCopy\BeamerCallItem\beamer@callorigitem
% \NewCommandCopy\BeamerParseItem\beamer@parseitem

\newcommand{\ColorItemsOn}{%
    \RenewDocumentCommand{\beamer@callorigitem}{}{\BeamerCallItemPatched}%
% \RenewDocumentCommand{\beamer@parseitem}{d<>}{%
%     \BeamerParseItemPatched <##1>%
% }%
}
\newcommand{\ColorItemsOff}{%
    \RenewDocumentCommand{\beamer@callorigitem}{}{\BeamerCallItem}%
% \RenewDocumentCommand{\beamer@parseitem}{d<>}{\BeamerParseItem<##1>}%
}
% \AtBeginEnvironment{itemize}{
%     \pgfmathparse{int(mod(\@itemdepth + 1, 2))}%
%     \ifnum\pgfmathresult=0%
%     \ResetColors{main}%
%     \else
%     \ResetColors{second level}%
%     \fi%
% }
% \AtEndEnvironment{itemize}{
%     \PackageWarning{DEBUG}{fim itemize: \the\@itemdepth}
%     \pgfmathparse{int(mod(\@itemdepth + 1, 2))}%
%     \ifnum\pgfmathresult=0%
%     \ResetColors{main}%
%     \else
%     \ResetColors{second level}%
%     \fi%
% }

% \AtBeginEnvironment{enumerate}{
%     \pgfmathparse{int(mod(\@itemdepth + 1, 2))}%
%     \ifnum\pgfmathresult=1%
%     \ResetColors{main}%
%     \else
%     \ResetColors{second level}%
%     \fi%
% }
% \AtEndEnvironment{enumerate}{
%     \PackageWarning{DEBUG}{fim enumerate: \the\@itemdepth}
%     \pgfmathparse{int(mod(\@itemdepth + 1, 2))}%
%     \ifnum\pgfmathresult=1%
%     \ResetColors{main}%
%     \else
%     \ResetColors{second level}%
%     \fi%
% }

%! formatter = off
\NewDocumentCommand{\BeamerCallItemPatched}{}{%
    \stepcounter{ordem}%
    \NextColor% --- Patched here
    \@ifnextchar[\beamer@@callorigitem{%
        \beamer@origitem\kern0pt\ignorespaces%
    }%
}


\ColorItemsOn %% defaults to On

\NewDocumentCommand{\Block}{d<>om}{%
    \begin{tikzpicture}
        \node[draw, text width = 0.5\textwidth] (text) {#3};
        \node[draw, anchor = east, circle] at (text.west) {$\triangleright$};
    \end{tikzpicture}%
}

\def\enumerate{%
    \ResetColors{main}\ResetColors{second level}%
    \ifnum\@enumdepth>2\relax\@toodeep
    \else%
    \advance\@enumdepth\@ne%
    \edef\@enumctr{enum\romannumeral\the\@enumdepth}%
    \advance\@itemdepth\@ne%
    \fi%
    \beamer@computepref\@enumdepth% sets \beameritemnestingprefix
    \edef\beamer@enumtempl{enumerate \beameritemnestingprefix item}%
    \@ifnextchar[{\beamer@@enum@}{\beamer@enum@}%
}
\renewcommand{\itemize}[1][]{%
    \ResetColors{main}\ResetColors{second level}%
    \ifblank{#1}{}{\def\beamer@defaultospec{#1}}%
    \ifnum \@itemdepth >2\relax\@toodeep\else
    \advance\@itemdepth\@ne
    \beamer@computepref\@itemdepth% sets \beameritemnestingprefix
    \usebeamerfont{itemize/enumerate \beameritemnestingprefix body}%
    \usebeamercolor[fg]{itemize/enumerate \beameritemnestingprefix body}%
    \usebeamertemplate{itemize/enumerate \beameritemnestingprefix body begin}%
    \list
    {\usebeamertemplate{itemize \beameritemnestingprefix item}}
    {\def\makelabel##1{%
            {%
            \hss\llap{{%
                \usebeamerfont*{itemize \beameritemnestingprefix item}%
                \usebeamercolor[fg]{itemize \beameritemnestingprefix item}##1}}%
        }%
    }%
    }
    \fi%
    \beamer@cramped%
    \raggedright%
    \beamer@firstlineitemizeunskip%
}

\RequirePackage{xpatch}
